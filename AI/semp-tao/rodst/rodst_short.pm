module rodst_short;
// #begin# Machine generated header. Do not alter or delete this line.
// #end# Do not alter or delete this line.

var $n : tuple of atom := atom[];

var $ch : tuple of atom := atom[Иван, Екатерина];

var $win1;
var $wy : integer := 20;

rule ввод
   forall $x: Человек( имя: $имя )
=>
   $n := $n + atom[$имя] ;
end;

rule ввод1
=>
   var $m1,$m2 : integer;
   $m1 := Menu(400,50," Выберите человека", $n, 1 ); 
   $ch[1]:= $n[$m1];
   OutText( $win1, 50, $wy, $ch[1]);
   $wy:=$wy+15;
   $m2 := Menu(400,50," Выберите человека", $n, 1 ); 
   $ch[2]:= $n[$m2];
   OutText( $win1, 50, $wy, $ch[2]);
   $wy:=$wy+30;
end;

rule ввод2
exist $x: Человек( имя:$имяx ),
      $y: Человек( имя:$имяy )
  when ( $имяx = $ch[1] ) & ( $имяy = $ch[2] )
=> 
  new родств($x, $y);
end;

// Правило для остановки
rule Stop
=>
  activate group();
end;

rule ДетиРодителей
  forall $x: Человек( родители: $род )
  when #$род != 0
=>
  for $i in $род loop
       edit   $i: Человек( дети:  $i.дети + Человек{$x} ); 
  end;
end;

rule РодителиДетей
  forall $x: Человек(  супруг: $супруг, дети: $дети )
  when (#$дети != 0) & ($супруг != ?)
=>
  if #$супруг.дети = 0
  then edit   $супруг: Человек( дети: $дети );
  end;
  for $ii in $дети loop
      if #$ii.родители != 2
      then edit   $ii: Человек( родители: Человек{$x, $супруг }); 
      end; 
  end;
end;

/*----------------------------------------------------------------*/

rule Мать_Отец
exist $rod : родств(кто: $x, кому: $y),
      $x: Человек( родители: $род )
      when ( #$род != 0 ) & ( $y in $род  )
=>
      if $y.пол = муж 
      then   
           OutText( $win1, 50, $wy, ToString($y.имя)+ "  отец "+ ToString($x.имя) );
      else 
           OutText( $win1, 50, $wy,ToString($y.имя)+ "  мать "+ToString($x.имя) );
       end; 
      
      $wy := $wy + 15;

      if $x.пол = муж
      then  
           OutText( $win1, 50, $wy, ToString($x.имя) + "  сын " + ToString($y.имя) );
      else  
           OutText( $win1, 50, $wy, ToString($x.имя)+"  дочь " + ToString($y.имя) );
      end; 
      $wy := $wy + 30; 
finish
      activate group();
end;

rule Супруг
  exist $rod : родств(кто: $x, кому: $y ),
        $x: Человек( имя:$имя, супруг: $y )
=>
         if $x.пол = муж 
         then   
             OutText( $win1, 50, $wy, ToString($x.имя) + "  муж " + ToString($y.имя) );
         else 
             OutText( $win1, 50, $wy, ToString($x.имя) + "  жена " + ToString($y.имя) );
         end; 

         $wy := $wy + 15;   

         if $y.пол = муж
         then  
             OutText( $win1, 50, $wy, ToString($y.имя) + "  муж " + ToString($x.имя) );
         else  
             OutText( $win1, 50, $wy, ToString($y.имя) + "  жена " + ToString($x.имя) );
         end; 

      $wy := $wy + 30;   
finish
	activate group();
end;
/*
rule Кузен_Кузина
  exist $rod : родств(кто: $x, кому: $y),
         $x: Человек( родители: $род1 ),
         $y: Человек( родители: $род2 )
         when ( #($род1)!=0 & #($род2) != 0 & $род1!=$род2)
=>
        for $ii in $род1 loop
          for $ij in $род2 loop
            if #$ii.родители!=0 & #$ij.родители!=0 & $ii.родители=$ij.родители
            then 
              if $x.пол = муж 
              then   
                 OutText( $win1, 50, $wy, ToString($x.имя) + "  кузен " + ToString($y.имя) );
              else 
                 OutText( $win1, 50, $wy, ToString($x.имя) + "  кузина " + ToString($y.имя) );
              end; 

              $wy := $wy + 15;   

              if $y.пол = муж
              then  
                  OutText( $win1, 50, $wy, ToString($y.имя) + "  кузен " + ToString($x.имя) );
              else  
                  OutText( $win1, 50, $wy, ToString($y.имя) + "  кузина " + ToString($x.имя) );
              end; 
              $wy := $wy + 30;   
            end; //if 
          end; //for ij
        end; //for ii
finish
	activate group();
end;
*/
rule Кузен_Кузина
  exist $rod : родств(кто: $x, кому: $y),
         $x: Человек( родители: $род1 ),
         $y: Человек( родители: $род2 ),
         $rx: Человек( родители: $rrxy),
         $ry: Человек( родители: $rrxy)
         when (#($род1)!=0) & ($rx != ?) & ($rx in $род1) & (#($род2)!=0) & ($ry != ?) & ($ry in $род2) & (#($rrxy)!=0) & ($род1!=$род2)
=>
  
              if $x.пол = муж 
              then   
                 OutText( $win1, 50, $wy, ToString($x.имя) + "  кузен " + ToString($y.имя) );
              else 
                 OutText( $win1, 50, $wy, ToString($x.имя) + "  кузина " + ToString($y.имя) );
              end; 

              $wy := $wy + 15;   

              if $y.пол = муж
              then  
                  OutText( $win1, 50, $wy, ToString($y.имя) + "  кузен " + ToString($x.имя) );
              else  
                  OutText( $win1, 50, $wy, ToString($y.имя) + "  кузина " + ToString($x.имя) );
              end; 
              $wy := $wy + 30;   
            
finish
	activate group();
end;

//РЕАЛИЗАЦИЯ ПРАВИЛА ДЕВЕРЬ

rule Деверь
  exist $rod : родств(кто: $x, кому: $y),
         $x: Человек( родители: $род1 ),
		 $bx: Человек( родители: $род1 )
         when (#($род1)!=0) & ($bx != ?) & ($x.пол = муж) & ($bx.пол = муж) & ($bx = $y.супруг)
=>
              OutText( $win1, 50, $wy, ToString($x.имя) + "  деверь " + ToString($y.имя) ); 
              $wy := $wy + 30;   
            
finish
	activate group();
end;

rule НетРодства
  exist $rod : родств(кто: $x, кому: $y)
=>
  OutText( $win1, 50, $wy, ToString($x.имя) + " не состоит в известных родственных отношениях с " + ToString($y.имя) );
end;


var $правила : group := group(ДетиРодителей, РодителиДетей, ввод, ввод1, ввод2, 
							  Мать_Отец, Супруг, Кузен_Кузина, Деверь, НетРодства, Stop );

begin
  new

    @Иван: Человек (  имя: Иван, пол: муж ),

    @Екатерина: Человек (  имя: Екатерина,  супруг: @Иван ),

    @Александр: Человек (  имя: Александр ),
    
    @Анна: Человек (  имя: Анна, пол: жен, супруг: @Александр ),

    @Лена: Человек (  имя: Лена, пол: жен ),

    @Миша: Человек (  имя: Миша, пол: муж ),

    @Вася: Человек (  имя: Вася, пол: муж ),

    @Валентина: Человек (  имя: Валентина,  
  	                родители: Человек { @Екатерина , @Иван  } ),
    
    @Елена: Человек (  имя: Елена,  
  	                родители: Человек { @Екатерина , @Иван   } ),

    @Андрей: Человек (  имя: Андрей, пол: муж, 
                      супруг: @Валентина, 
        	      дети: (Человек{ @Лена , @Миша, @Вася }) ,
        	      родители: Человек{ @Александр, @Анна } ),

    @Оля: Человек (  имя: Оля, пол: жен ), 
 
    @Дима: Человек (  имя: Дима, пол: муж ), 

    @Сергей: Человек (  имя: Сергей,
	                родители: Человек { @Екатерина, @Иван } ),

    @Инна: Человек (  имя: Инна, пол: жен, 
   	                  супруг: @Сергей,
	                  дети: Человек{ @Оля, @Дима } ), 
	
    @Наташа: Человек (  имя: Наташа, пол: жен ),
 
    @Аня: Человек (  имя: Аня, пол: жен ), 
 
    @Людмила: Человек (  имя: Людмила, пол: жен, 
	              дети: Человек { @Наташа, @Аня } ,
	              родители: Человек{ @Александр , @Анна} ),

    @Владимир: Человек (  имя: Владимир,
	              супруг: @Людмила ), 
 
    @Тамара: Человек (  имя: Тамара  ), 

    @Леша: Человек (  имя: Леша, пол: муж, родители: Человек{ @Тамара } ), 

    @Ира: Человек (  имя: Ира, пол: жен ),

    @Петр: Человек (    имя: Петр, пол: муж,супруг: @Тамара, 
	             	дети: Человек{ @Ира },
                        родители: Человек{ @Александр });

   $win1 := MakeWindow("    Вопросно-ответная система 'Родственники' ", 0,0,1010,640);  
   TextColor($win1,4);
   call $правила;
   if (Ask("   Конец сеанса ", " Закрыть окна?"))
   then  CloseWindow($win1);
   end; 
WriteNet();

end.

